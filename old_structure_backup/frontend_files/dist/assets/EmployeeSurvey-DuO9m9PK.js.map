{"version":3,"file":"EmployeeSurvey-DuO9m9PK.js","sources":["../../src/pages/EmployeeSurvey.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst EmployeeSurvey: React.FC = () => {\n  const { token } = useParams<{ token: string }>();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [surveyData, setSurveyData] = useState<any>(null);\n  const [answers, setAnswers] = useState<Record<number, string>>({});\n  const [submitting, setSubmitting] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n\n  useEffect(() => {\n    if (token) {\n      fetchSurvey(token);\n    }\n  }, [token]);\n\n  const fetchSurvey = async (surveyToken: string) => {\n    try {\n      const response = await fetch(`http://localhost:8000/s/r/${surveyToken}`);\n      if (!response.ok) {\n        throw new Error('Survey not found or expired');\n      }\n      const data = await response.json();\n      setSurveyData(data);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load survey');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerChange = (questionId: number, answer: string) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n\n  const handleSubmit = async () => {\n    if (!token || !surveyData) return;\n\n    setSubmitting(true);\n    try {\n      const response = await fetch(`http://localhost:8000/s/r/${token}/submit`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ answers }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to submit survey');\n      }\n\n      setSubmitted(true);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to submit survey');\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading survey...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Survey Not Available</h2>\n          <p className=\"text-gray-600\">{error}</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!surveyData) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <p className=\"text-gray-600\">No survey data available</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show completion message if already submitted\n  if (surveyData.status === 'completed' || submitted) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 flex items-center justify-center\">\n        <div className=\"text-center max-w-md mx-auto px-4\">\n          <div className=\"w-20 h-20 bg-gradient-to-r from-green-500 to-blue-500 rounded-full mx-auto mb-6 flex items-center justify-center\">\n            <span className=\"text-3xl\">✅</span>\n          </div>\n          <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Thank You!</h2>\n          <p className=\"text-gray-600 mb-6 text-lg\">\n            {submitted \n              ? \"Your survey response has been submitted successfully!\"\n              : \"This survey has already been completed. Thank you for your response!\"\n            }\n          </p>\n          <div className=\"bg-white rounded-xl shadow-sm border border-green-100 p-6\">\n            <div className=\"flex items-center justify-center space-x-2 text-green-800\">\n              <span className=\"text-xl\">🛡️</span>\n              <span className=\"font-medium\">Your response is anonymous and secure</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Show active survey with emoji rating system\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mx-auto mb-4 flex items-center justify-center\">\n            <span className=\"text-2xl\">📊</span>\n          </div>\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n            {surveyData.title}\n          </h1>\n          <p className=\"text-gray-600 max-w-2xl mx-auto\">{surveyData.description}</p>\n        </div>\n\n        {/* Privacy Notice */}\n        <div className=\"bg-white rounded-xl shadow-sm border border-blue-100 p-6 mb-8\">\n          <div className=\"flex items-start space-x-3\">\n            <div className=\"flex-shrink-0\">\n              <span className=\"text-2xl\">🛡️</span>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Anonymous & Secure</h3>\n              <p className=\"text-gray-600 text-sm\">\n                {surveyData.message}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Survey Questions */}\n        <div className=\"space-y-8\">\n          {surveyData.questions?.map((question: any, index: number) => (\n            <div key={question.id} className=\"bg-white rounded-xl shadow-sm border border-gray-100 p-8\">\n              <div className=\"text-center mb-8\">\n                <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">\n                  {question.text}\n                </h2>\n                <div className=\"w-24 h-1 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full mx-auto\"></div>\n              </div>\n\n              {question.type === 'rating' && question.options && (\n                <div className=\"flex justify-center items-center space-x-4 flex-wrap gap-4\">\n                  {question.options.map((option: string, optionIndex: number) => {\n                    // Map rating options to emojis\n                    const emojiMap: { [key: string]: string } = {\n                      'Very dissatisfied': '😞',\n                      'Dissatisfied': '😕', \n                      'Neutral': '😐',\n                      'Satisfied': '🙂',\n                      'Very satisfied': '😊',\n                      'Very unlikely': '😞',\n                      'Unlikely': '😕',\n                      'Likely': '🙂',\n                      'Very likely': '😊'\n                    };\n                    \n                    const emoji = emojiMap[option] || '😐';\n                    \n                    return (\n                      <label \n                        key={optionIndex} \n                        className=\"flex flex-col items-center cursor-pointer group p-4 rounded-xl border-2 border-transparent hover:border-blue-200 hover:bg-blue-50 transition-all duration-200\"\n                      >\n                        <input\n                          type=\"radio\"\n                          name={`question-${question.id}`}\n                          value={option}\n                          className=\"sr-only\"\n                          onChange={(e) => handleAnswerChange(question.id, e.target.value)}\n                        />\n                        <div className=\"text-6xl mb-3 group-hover:scale-110 transition-transform duration-200\">\n                          {emoji}\n                        </div>\n                        <span className=\"text-sm font-medium text-gray-700 text-center max-w-24\">\n                          {option}\n                        </span>\n                      </label>\n                    );\n                  })}\n                </div>\n              )}\n\n              {question.type === 'text' && (\n                <div className=\"max-w-2xl mx-auto\">\n                  <textarea\n                    placeholder=\"Share your thoughts... (Optional)\"\n                    className=\"w-full min-h-[120px] border-2 border-gray-200 rounded-xl px-4 py-3 focus:border-blue-500 focus:outline-none transition-colors duration-200 resize-none\"\n                    onChange={(e) => handleAnswerChange(question.id, e.target.value)}\n                  />\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"mt-12 text-center\">\n          <button \n            onClick={handleSubmit}\n            disabled={submitting}\n            className=\"bg-gradient-to-r from-blue-600 to-purple-600 text-white px-12 py-4 rounded-xl text-lg font-semibold hover:from-blue-700 hover:to-purple-700 transform hover:scale-105 transition-all duration-200 shadow-lg hover:shadow-xl disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none\"\n          >\n            {submitting ? (\n              <>\n                <span className=\"animate-spin inline-block mr-2\">⏳</span>\n                Submitting...\n              </>\n            ) : (\n              <>Submit Survey 🚀</>\n            )}\n          </button>\n        </div>\n\n        {/* Footer */}\n        <div className=\"mt-8 text-center\">\n          <p className=\"text-gray-500 text-sm\">\n            Powered by Novora • Your responses are completely anonymous\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeSurvey;\n"],"names":["useState","useEffect","jsxs","jsx","Fragment"],"mappings":"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"}